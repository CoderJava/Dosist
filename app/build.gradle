apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.ysn.dosist"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "production"
    productFlavors {
        production {
            applicationIdSuffix ""
        }
    }
}

dependencies {

    /* Directory library */
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    /* Kotlin support */
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    /* Android support */
    implementation "com.android.support:appcompat-v7:$androidSupportVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    implementation "com.android.support:design:$androidSupportVersion"

    /* Testing framework */
    testImplementation 'junit:junit:4.12'
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    androidTestImplementation "com.android.support.test:runner:$testRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"

    /* Type safe HTTP client for Android and Java by Square */
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit-converters:$retrofitVersion"

    /* OkHttp */
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    /**
     * RxJava - Reactive extensions for the JVM - a library for composing asynchronous and
     * event based programs using observable sequences for the Java VM
     */
    implementation "io.reactivex.rxjava2:rxjava:$rxJava2Version"

    /* A java serialization or deserialization library to convert Java Objects into JSON and revert */
    implementation "com.google.code.gson:gson:$gsonVersion"

    /* Dependency injection */
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    provided "org.glassfish:javax.annotation:$annotationVersion"

    /* Memory leak detection */
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    /* Fresco */
    implementation "com.facebook.fresco:fresco:$frescoVersion"

    /* Stetho */
    implementation "com.facebook.stetho:stetho-okhttp3:$stethoVersion"

    /* Anko */
    implementation "org.jetbrains.anko:anko-commons:$ankoVersion"
    implementation "org.jetbrains.anko:anko-design:$ankoVersion"
}
